<UserControl x:Class="Graphnet.Dashboard.CoreUI.Views.Dataflow.RuleEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gc="http://schemas.graphnethealth.com/presentation"
             xmlns:helpers="clr-namespace:Graphnet.Wpf.Presentation.Helpers;assembly=Graphnet.Wpf.Presentation"
             xmlns:converters="clr-namespace:Graphnet.Wpf.Presentation.Converters;assembly=Graphnet.Wpf.Presentation"
             xmlns:bindings="clr-namespace:Graphnet.Wpf.Presentation.Bindings;assembly=Graphnet.Wpf.Presentation"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:regions="http://www.codeplex.com/CompositeWPF"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="500">
    <UserControl.Resources>
        <converters:ToCapatilizeCaseConverter x:Key="ToCapatilizeCaseConverter"/>
    </UserControl.Resources>
    <gc:Interaction.Behaviors>
        <gc:HostWindowBehavior >
            <gc:HostWindowBehavior.WindowStyle>
                <Style TargetType="{x:Type gc:ModernWindow}" BasedOn="{StaticResource {x:Type gc:ModernWindow}}" >
                    <Setter Property="ResizeMode" Value="CanResize"/>
                    <Setter Property="MinHeight" Value="300"/>
                    <Setter Property="MinWidth" Value="600"/>
                    <Setter Property="MaxHeight" Value="350"/>
                    <Setter Property="MaxWidth" Value="600"/>
                </Style>
            </gc:HostWindowBehavior.WindowStyle>
        </gc:HostWindowBehavior>
    </gc:Interaction.Behaviors>
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Margin="5" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>

            </Grid.ColumnDefinitions>
            <TextBlock   Grid.Column="0" Grid.Row="0" Text="Category" Margin="5"/>

            <ComboBox helpers:LazyFocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Grid.Column="1" 
                                              IsEditable="False"
                                            Width="200"
                                              IsEnabled="{Binding IsAddingNew}"
                                              ItemsSource="{Binding Categories}"
                                              
                                             Grid.Row="0"  SelectedItem="{Binding CurrentSegment.Category,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"  HorizontalAlignment="Left" Margin="5,6,0,4" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource ToCapatilizeCaseConverter}}"></TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <CheckBox  Grid.Row="0"  IsChecked="{Binding CurrentSegment.IsActive,Mode=TwoWay}" Content="Is Active" Grid.Column="2" Margin="10,5" VerticalAlignment="Center"/>

            <TextBlock Grid.Column="0" Grid.Row="2" Text="Description" Margin="5"/>
            <TextBox Grid.Column="1" Height="40" Grid.Row="2" TextWrapping="Wrap" Text="{Binding CurrentSegment.Description,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" HorizontalAlignment="Stretch" Margin="5" Grid.ColumnSpan="2" />

            <Separator Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Top" Height="1" HorizontalAlignment="Stretch" Grid.Row="3" Margin="0,2,0,0"/>

            <TextBlock Grid.Column="0" Grid.Row="4" Text="Options" Margin="5"/>
            <Grid Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0"   >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Buffer Size" Margin="5"/>
                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1"  VerticalAlignment="Center" Margin="5" Text="{Binding CurrentSegment.BufferSize,UpdateSourceTrigger=PropertyChanged}"  Minimum="0" Maximum="500"  HorizontalAlignment="Stretch" />
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Buffer Timeout" Margin="5"/>
                    <TextBox  Grid.Row="1" Grid.Column="1" Margin="5"  HorizontalAlignment="Stretch" Text="{Binding CurrentSegment.BufferTimeout,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"></TextBox>
                </Grid>
               
                <Grid Grid.Column="1"   >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Message Type" Margin="5"/>

                    <ComboBox Grid.Row="0" Grid.Column="1"  VerticalAlignment="Center"
                                                      IsEditable="False"
                                                      IsEnabled="{Binding IsAddingNew}" DisplayMemberPath="DisplayName"
                                                      Margin="5,5,0,5" ItemsSource="{Binding MessageMetadatas}" SelectedItem="{Binding SelectedMessageMetadata,UpdateSourceTrigger=PropertyChanged}"   HorizontalAlignment="Stretch" />
                    <TextBlock Validation.ErrorTemplate ="{x:Null}"  Grid.Column="0" DataContext="{Binding SelectedMessageMetadata}" Grid.ColumnSpan="2" Grid.Row="1" Text="{Binding Metadata.Description}" Margin="5,5,5,5"  HorizontalAlignment="Right" TextWrapping="Wrap" />

                </Grid>
            </Grid>
        </Grid>

        <gc:ModernButton Grid.Row="1" IconData="{StaticResource Dashboard.Icon.WorkflowEditor}" Command="{Binding LaunchWorkflowCommand}" Content="Launch Workflow Designer" Margin="5" HorizontalAlignment="Right"/>
        <StackPanel Grid.Row="2"   Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,15,0,0">
            <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Save}" Command="{Binding SaveCommand}" Content="Save" Margin="5"/>
            <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Cancel}" Command="{Binding CancelCommand}" Content="Cancel" Margin="5"/>
        </StackPanel>
    </Grid>
</UserControl>
