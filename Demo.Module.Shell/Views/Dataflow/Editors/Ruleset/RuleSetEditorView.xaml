<UserControl x:Class="Graphnet.Dashboard.CoreUI.Views.Dataflow.Editors.Ruleset.RuleSetEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gc="http://schemas.graphnethealth.com/presentation"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:dataflow="clr-namespace:Graphnet.Dashboard.WebContracts.Dataflow;assembly=Graphnet.Dashboard.WebContracts"
             xmlns:behaviors="clr-namespace:Graphnet.Dashboard.CoreUI.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="500">
    <UserControl.Resources>
        <Style TargetType="{x:Type xctk:PropertyGrid}">
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                </Style>
                <Style TargetType="Grid">
                    <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
                </Style>
                <Style TargetType="Expander">
                    <Setter Property="Background" Value="Brown"/>
                    <Setter Property="Foreground" Value="Brown"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
        </Style>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3">
            <TextBlock Text="Rule For " Margin="5" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
            <ComboBox Margin="5"  
                  IsEditable="False" 
                  ItemsSource="{Binding MessageTypes}"
                  SelectedItem="{Binding MessageType,Mode=TwoWay}" 
                  HorizontalAlignment="Left"
                  MinWidth="200">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding DisplayName}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <GroupBox Grid.Row="1" Grid.ColumnSpan="3" IsEnabled="{Binding AllowEdits}" BorderThickness="0" >
            <Grid  DataContext="{Binding RuleOptions}">
                <gc:Interaction.Behaviors>
                    <gc:ContextCleanUp/>
                </gc:Interaction.Behaviors>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <TabControl Grid.Row="0" Grid.RowSpan="2" Margin="5" SelectedIndex="{Binding SelectedTabIndex,Mode=TwoWay}" >
                        <TabItem Header="Conditions">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="If all of the following conditions are satisfied or of there are no conditions, execute 'If Actions' or 'Else Actions' should the conditions not be satisfied." 
                                           TextWrapping="Wrap" 
                                           Margin="5" 
                                           Grid.ColumnSpan="2"/>
                                <ListBox Grid.Column="0" 
                                         Grid.Row="1" 
                                         Margin="5" 
                                         DisplayMemberPath="Details.Description" 
                                         ItemsSource="{Binding Conditions}" 
                                         SelectedItem="{Binding SelectedCondition,Mode=TwoWay}" />
                                <StackPanel Grid.Column="2" Grid.Row="1"  Orientation="Vertical" VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left"  >
                                <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Page.New}" Command="{Binding AddConditionCommand}" Content="Add" Margin="5"/>
                                    <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteConditionCommand}" Content="Delete" Margin="5"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="If Actions" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="If all of the 'Conditions' are satisfied or if there are no 'Conditions' listed, the following Actions will be executed." 
                                           TextWrapping="Wrap" Margin="5" Grid.ColumnSpan="2"/>
                                <ListBox Grid.Column="0" 
                                         Grid.Row="1" 
                                         Margin="5" 
                                         DisplayMemberPath="Details.Description" 
                                         ItemsSource="{Binding IfActions}" 
                                         SelectedItem="{Binding SelectedIfAction,Mode=TwoWay}" >

                                </ListBox>
                                <StackPanel Grid.Column="2" Grid.Row="1"  Orientation="Vertical" VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left"  >
                                <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Page.New}" Command="{Binding AddIfActionCommand}" Content="Add" Margin="5"/>
                                    <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteIfActionCommand}" Content="Delete" Margin="5"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Else Actions">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="If any of the 'Conditions' are not satisfied, the Else Actions will be executed instead of the If Actions. Note that if there are no 'Conditions' the Else Actions will not be executed." 
                                           TextWrapping="Wrap" Margin="5" Grid.ColumnSpan="2"/>
                                <ListBox Grid.Column="0" 
                                         Grid.Row="1" 
                                         Margin="5" 
                                         DisplayMemberPath="Details.Description" 
                                         ItemsSource="{Binding ElseActions}" 
                                         SelectedItem="{Binding SelectedElseAction,Mode=TwoWay}" >

                                </ListBox>
                                <StackPanel Grid.Column="2" Grid.Row="1"  Orientation="Vertical" VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left"  >
                                <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Page.New}" Command="{Binding AddElseActionCommand}" Content="Add" Margin="5"/>
                                    <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteElseActionCommand}" Content="Delete" Margin="5"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Continue Conditions">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                            <TextBlock Text="If the 'Condinue conditions' are satisfied, or if there are no conditions, Continue to next middleware in the list. This will happen regardless to the outcome of the 'Conditions'" 
                                               TextWrapping="Wrap" Margin="5" Grid.ColumnSpan="2"/>
                                <ListBox Grid.Column="0" 
                                             Grid.Row="1" 
                                             Margin="5" 
                                             DisplayMemberPath="Details.Description" 
                                             ItemsSource="{Binding ConditionNext}" 
                                             SelectedItem="{Binding SelectedConditionNext,Mode=TwoWay}" >

                                </ListBox>
                                <StackPanel Grid.Column="2" Grid.Row="1"  Orientation="Vertical" VerticalAlignment="Top" Margin="5" HorizontalAlignment="Left"  >
                                <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Page.New}" Command="{Binding AddContinueCommand}" Content="Add" Margin="5"/>
                                <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteContinueCommand}" Content="Delete" Margin="5"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                
                <TextBlock Grid.Column="2" Text="Properties" Margin="5" />
                <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="2"/>
                <xctk:PropertyGrid Margin="5" Grid.Column="2"  Grid.Row="1" 
                                           SelectedObject="{Binding SelectedObject,Mode=TwoWay}" 
                                           ShowSearchBox="False" 
                                           ShowSortOptions="False" 
                                           ShowTitle="False"
                                           MinHeight="100"
                                           MinWidth="150"
                                           ShowAdvancedOptions="False"
                                           UpdateTextBoxSourceOnEnterKey="True"
                                           Foreground="{StaticResource ButtonText}" 
                                           Background="{StaticResource WindowBackground}" >
                    <xctk:PropertyGrid.EditorDefinitions>
                        <xctk:EditorTemplateDefinition >
                            <xctk:EditorTemplateDefinition.TargetProperties>
                                <xctk:TargetPropertyType Type="{x:Type dataflow:Variable}" />
                            </xctk:EditorTemplateDefinition.TargetProperties>
                            <xctk:EditorTemplateDefinition.EditingTemplate>
                                <DataTemplate>
                                    <ComboBox IsEditable="False" Margin="0,0,4,0" SelectedItem="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <gc:Interaction.Behaviors>
                                            <behaviors:VariableSelectorBehavior 
                                                VariableProvider="{Binding DataContext.VariableProvider,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                                FilterType="{Binding PropertyType}"
                                                SelectedVariable="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" />
                                        </gc:Interaction.Behaviors>
                                    </ComboBox>
                                </DataTemplate>
                            </xctk:EditorTemplateDefinition.EditingTemplate>
                        </xctk:EditorTemplateDefinition>
                    </xctk:PropertyGrid.EditorDefinitions>

                </xctk:PropertyGrid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
