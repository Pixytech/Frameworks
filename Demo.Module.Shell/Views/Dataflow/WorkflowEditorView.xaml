<UserControl x:Class="Graphnet.Dashboard.CoreUI.Views.Dataflow.WorkflowEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gc="http://schemas.graphnethealth.com/presentation"
             xmlns:bindings="clr-namespace:Graphnet.Wpf.Presentation.Bindings;assembly=Graphnet.Wpf.Presentation"
             xmlns:gcad="http://schemas.graphnethealth.com/presentation/avalondock"
             xmlns:converter="clr-namespace:Graphnet.Dashboard.CoreUI.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BoolToOppositeBoolConverter x:Key="BoolToOppositeBoolConverter"/>
    </UserControl.Resources>    
    <gc:Interaction.Behaviors>
        <gc:HostWindowBehavior >
            <gc:HostWindowBehavior.WindowStyle>
                <Style TargetType="{x:Type gc:ModernWindow}" BasedOn="{StaticResource {x:Type gc:ModernWindow}}" >
                    <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Setter Property="MinHeight" Value="600"/>
                    <Setter Property="MinWidth" Value="800"/>
                    <Setter Property="MaxHeight" Value="800"/>
                    <Setter Property="MaxWidth" Value="1200"/>
                    <Setter Property="LogoData" Value="{StaticResource Dashboard.Icon.WorkflowEditor}"/>
                </Style>
            </gc:HostWindowBehavior.WindowStyle>
        </gc:HostWindowBehavior>
    </gc:Interaction.Behaviors>
    <Grid>

        <gc:ModernBusyIndicator IsBusy="{Binding IsLoading}" BusyContent="Please wait..">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <gcad:DockingManager AllowMixedOrientation="True" Grid.RowSpan="2" >
            <gcad:DockingManager.Theme>
                <gcad:ModernTheme/>
            </gcad:DockingManager.Theme>
            <gcad:LayoutRoot>
                <gcad:LayoutPanel >
                   
                    <gcad:LayoutAnchorablePaneGroup DockWidth="Auto"  >
                        <gcad:LayoutAnchorablePane  >
                            <gcad:LayoutAnchorable Title="Middlewares" CanClose="False" CanFloat="False" CanHide="False" IsActive="True" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Margin="0" MaxHeight="100" MaxWidth="250" HorizontalAlignment="Center">
                                        <Border Background="Green" HorizontalAlignment="Stretch"  CornerRadius="5" Margin="4"/>
                                        <TextBlock Margin="10"   Text="{Binding StartMessageDescription}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Padding="2"/>
                                    </Grid>
                                    <ListBox Grid.Row="1" ItemsSource="{Binding Segment.Middlewares}" Background="Transparent" BorderThickness="0" SelectedItem="{Binding SelectedMiddleware,Mode=TwoWay}" >
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                <Setter Property="Background" Value="Transparent" />
                                                    <Style.Resources>
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                                                    </Style.Resources>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate >
                                                    <StackPanel>
                                                    <Path Width="12" Height="16"  Stretch="Fill" Fill="Red" Data="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z "/>

                                                    <Grid Margin="0" MaxHeight="100" MaxWidth="250" >
                                                            <Border Background="Gray" HorizontalAlignment="Stretch"  CornerRadius="3" Margin="4"/>
                                                            <Border Background="{StaticResource Accent}" HorizontalAlignment="Stretch" CornerRadius="3" Margin="4">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="true">
                                                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                            </Border>

                                                            <TextBox Margin="10"  TextWrapping="Wrap" Background="Transparent" BorderThickness="0" IsHitTestVisible="{Binding IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"  Grid.Column="1" Text="{Binding Description}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="2"/>

                                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.CellUp}" 
                                                                             Command="{Binding MoveUpMiddlewareCommand}"
                                                                             Visibility="{Binding IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                             DataContext="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                                             Grid.Column="0" 
                                                                             HorizontalAlignment="Left" 
                                                                             VerticalAlignment="Top" 
                                                                             Margin="1,-10,1,1"
                                                                             />

                                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.CellDown}" Command="{Binding MoveDownMiddlewareCommand}"   
                                                                            Visibility="{Binding IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                            DataContext="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"  
                                                                            Grid.Column="0" 
                                                                            HorizontalAlignment="Left" 
                                                                            VerticalAlignment="Bottom" 
                                                                            Margin="1,1,1,-10"/>

                                                    </Grid>
                                                        
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    <StackPanel Grid.Column="0" Grid.Row="2"  Orientation="Horizontal" VerticalAlignment="Center" Margin="5,5,0,0" HorizontalAlignment="Right" >
                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.AddBelow}" Command="{Binding AddMiddlewareCommand}" Content="Add" Margin="5"/>
                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteMiddlewareCommand}" Content="Delete" Margin="5"/>
                                    </StackPanel>
                                </Grid>
                            </gcad:LayoutAnchorable>
                            <gcad:LayoutAnchorable Title="Variables" CanClose="False" CanFloat="False" CanHide="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <DataGrid ItemsSource="{Binding Segment.Variables}" SelectedItem="{Binding SelectedVariable, Mode=TwoWay}" SelectionMode="Single" IsReadOnly="True"  AutoGenerateColumns="False" GridLinesVisibility="All" Margin="5" >
                                        <bindings:PushBindingManager.PushBindings>
                                            <bindings:PushBinding TargetProperty="SelectedItems" Path="SelectedVariable" UpdateSourceTrigger="PropertyChanged" />
                                        </bindings:PushBindingManager.PushBindings>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                            <DataGridTextColumn Header="Value" Binding="{Binding Value}" />
                                        </DataGrid.Columns>
                                    </DataGrid>

                                    <StackPanel Grid.Column="0" Grid.Row="1"  Orientation="Horizontal" VerticalAlignment="Center" Margin="5,5,0,0" HorizontalAlignment="Right" >
                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.AddStart}" Command="{Binding AddVariableCommand}" Content="Add" Margin="5"/>
                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Edit}" Command="{Binding EditVariableCommand}" Content="Edit" Margin="5"/>
                                        <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Delete}" Command="{Binding DeleteVariableCommand}" Content="Delete" Margin="5"/>
                                    </StackPanel>
                                </Grid>
                            </gcad:LayoutAnchorable>
                        </gcad:LayoutAnchorablePane>
                    </gcad:LayoutAnchorablePaneGroup>

                    <gcad:LayoutDocumentPane >
                        <gcad:LayoutAnchorable CanAutoHide="False" Title="Middleware Options" CanClose="False" CanFloat="True" CanHide="False">
                            <gc:ModernBusyIndicator IsBusy="{Binding IsEditorLoading}" BusyContent="Please wait..">
                                <Grid Margin="0,0,0,32">
                                    <TextBlock Visibility="{Binding EditorNotAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" Text="Add or select at least once middleware to edit further." FontSize="20" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="50" />
                                    <ContentControl Content="{Binding Editor}" Margin="5"/>
                                </Grid>
                            </gc:ModernBusyIndicator>
                        </gcad:LayoutAnchorable>
                    </gcad:LayoutDocumentPane>

                </gcad:LayoutPanel>
            </gcad:LayoutRoot>
        </gcad:DockingManager>
            </Grid>
        </gc:ModernBusyIndicator>


        <StackPanel VerticalAlignment="Bottom"  Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,15,0">
            <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Ok}" Command="{Binding SaveCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource BoolToOppositeBoolConverter}}" Content="OK" Margin="5"/>
            <gc:ModernButton IconData="{StaticResource Dashboard.Icon.Cancel}" Command="{Binding CancelCommand}" Content="Cancel" Margin="5"/>
        </StackPanel>
    </Grid>
    
</UserControl>
